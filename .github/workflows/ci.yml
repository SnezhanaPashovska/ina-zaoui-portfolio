name: Continuous integration
on: [push]
jobs:
  ci:
    name: Continuous Integration
    runs-on: ${{ matrix.operating-system }}
    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ["8.2", "8.3"]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, xml, ctype, iconv, intl
          tools: composer, castor

      - name: Cache Composer Dependencies
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache
          key: composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: composer-

      - name: Install Dependencies
        run: composer install --no-progress --prefer-dist

      - name: Set DATABASE_URL for CI
        run: echo "DATABASE_URL=postgresql://postgres:postgres@localhost:5432/ina_zaoui?serverVersion=16&charset=utf8" >> $GITHUB_ENV

      - name: Start PostgreSQL Docker Container
        run: |
          docker run --name postgres-test -e POSTGRES_PASSWORD=postgres -e POSTGRES_USER=postgres -e POSTGRES_DB=ina_zaoui -p 5432:5432 -d postgres:16
          sleep 15  # Give time for PostgreSQL to start up

      - name: Wait for PostgreSQL to be ready
        run: |
          until docker exec postgres-test pg_isready -U postgres -d ina_zaoui_test; do
            echo "Waiting for PostgreSQL to be ready..."
            sleep 2
            done

      - name: Setup database
        run: |
          php bin/console doctrine:database:drop --if-exists --env=test --force
          php bin/console doctrine:database:create --env=test
          php bin/console doctrine:schema:update --force --env=test
          php bin/console doctrine:fixtures:load --env=test --no-interaction

      - name: Run PHPUnit Tests
        run: php bin/phpunit

      - name: Clear and Warm Up Symfony Cache
        run: |
          php bin/console cache:clear --env=test --no-warmup
          php bin/console cache:warmup --env=test

      - name: Clear and Warm Up Symfony Cache
        run: |
          php bin/console cache:clear --env=dev --no-warmup
          php bin/console cache:warmup --env=dev

      - name: Run PHPStan Analysis
        run: php vendor/bin/phpstan
